// Mocks generated by Mockito 5.4.6 from annotations
// in paypal_integration/test/integration/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:paypal_integration/core/services/network/dio_http_service.dart'
    as _i4;
import 'package:paypal_integration/src/checkout_services.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [PaypalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaypalService extends _i1.Mock implements _i2.PaypalService {
  MockPaypalService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get clientId =>
      (super.noSuchMethod(
            Invocation.getter(#clientId),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#clientId),
            ),
          )
          as String);

  @override
  String get secretKey =>
      (super.noSuchMethod(
            Invocation.getter(#secretKey),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#secretKey),
            ),
          )
          as String);

  @override
  bool get sandboxMode =>
      (super.noSuchMethod(Invocation.getter(#sandboxMode), returnValue: false)
          as bool);

  @override
  void injectHttp(_i4.DioHttpService? service) => super.noSuchMethod(
    Invocation.method(#injectHttp, [service]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<Map<String, dynamic>> createPayment({
    required String? accessToken,
    required String? intent,
    required List<Map<String, dynamic>>? transactions,
    required String? returnUrl,
    required String? cancelUrl,
    String? noteToPayer,
    String? experienceProfileId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createPayment, [], {
              #accessToken: accessToken,
              #intent: intent,
              #transactions: transactions,
              #returnUrl: returnUrl,
              #cancelUrl: cancelUrl,
              #noteToPayer: noteToPayer,
              #experienceProfileId: experienceProfileId,
            }),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> executePayment({
    required String? accessToken,
    required String? executeUrl,
    required String? payerId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#executePayment, [], {
              #accessToken: accessToken,
              #executeUrl: executeUrl,
              #payerId: payerId,
            }),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> captureAuthorization({
    required String? accessToken,
    required String? authorizationId,
    required String? total,
    required String? currency,
    bool? isFinalCapture = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#captureAuthorization, [], {
              #accessToken: accessToken,
              #authorizationId: authorizationId,
              #total: total,
              #currency: currency,
              #isFinalCapture: isFinalCapture,
            }),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> refundCapture({
    required String? accessToken,
    required String? captureId,
    String? value,
    String? currencyCode,
    String? noteToPayer,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#refundCapture, [], {
              #accessToken: accessToken,
              #captureId: captureId,
              #value: value,
              #currencyCode: currencyCode,
              #noteToPayer: noteToPayer,
            }),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<void> voidAuthorization({
    required String? accessToken,
    required String? authorizationId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#voidAuthorization, [], {
              #accessToken: accessToken,
              #authorizationId: authorizationId,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>> getPaymentDetails({
    required String? accessToken,
    required String? paymentId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getPaymentDetails, [], {
              #accessToken: accessToken,
              #paymentId: paymentId,
            }),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> listTransactions({
    required String? accessToken,
    required String? startDate,
    required String? endDate,
    String? transactionStatus,
    int? page = 1,
    int? pageSize = 20,
    String? fields,
    String? balanceAffectingRecordsOnly,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#listTransactions, [], {
              #accessToken: accessToken,
              #startDate: startDate,
              #endDate: endDate,
              #transactionStatus: transactionStatus,
              #page: page,
              #pageSize: pageSize,
              #fields: fields,
              #balanceAffectingRecordsOnly: balanceAffectingRecordsOnly,
            }),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);
}
